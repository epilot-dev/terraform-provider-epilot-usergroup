// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"encoding/json"
	tfTypes "github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/provider/types"
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"math/big"
	"time"
)

func (r *UserGroupDataSourceModel) RefreshFromSharedGroup(resp *shared.Group) {
	if resp != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt)
		r.CreatedBy = types.StringPointerValue(resp.CreatedBy)
		if resp.CrtAssignee == nil {
			r.CrtAssignee = nil
		} else {
			r.CrtAssignee = &tfTypes.CrtAssignee{}
			if resp.CrtAssignee.ActivatedAt != nil {
				r.CrtAssignee.ActivatedAt = types.StringValue(resp.CrtAssignee.ActivatedAt.Format(time.RFC3339Nano))
			} else {
				r.CrtAssignee.ActivatedAt = types.StringNull()
			}
			if resp.CrtAssignee.CreatedAt != nil {
				r.CrtAssignee.CreatedAt = types.StringValue(resp.CrtAssignee.CreatedAt.Format(time.RFC3339Nano))
			} else {
				r.CrtAssignee.CreatedAt = types.StringNull()
			}
			if resp.CrtAssignee.CrtIndex != nil {
				r.CrtAssignee.CrtIndex = types.NumberValue(big.NewFloat(float64(*resp.CrtAssignee.CrtIndex)))
			} else {
				r.CrtAssignee.CrtIndex = types.NumberNull()
			}
			r.CrtAssignee.CustomStartPage = types.StringPointerValue(resp.CrtAssignee.CustomStartPage)
			r.CrtAssignee.Department = types.StringPointerValue(resp.CrtAssignee.Department)
			r.CrtAssignee.DisplayName = types.StringPointerValue(resp.CrtAssignee.DisplayName)
			r.CrtAssignee.DraftEmail = types.StringPointerValue(resp.CrtAssignee.DraftEmail)
			r.CrtAssignee.Email = types.StringPointerValue(resp.CrtAssignee.Email)
			if len(resp.CrtAssignee.EmailNotificationSetting) > 0 {
				r.CrtAssignee.EmailNotificationSetting = make(map[string]types.String)
				for key, value := range resp.CrtAssignee.EmailNotificationSetting {
					result, _ := json.Marshal(value)
					r.CrtAssignee.EmailNotificationSetting[key] = types.StringValue(string(result))
				}
			}
			if len(resp.CrtAssignee.Favorites) > 0 {
				r.CrtAssignee.Favorites = make(map[string]types.String)
				for key1, value1 := range resp.CrtAssignee.Favorites {
					result1, _ := json.Marshal(value1)
					r.CrtAssignee.Favorites[key1] = types.StringValue(string(result1))
				}
			}
			if len(resp.CrtAssignee.FeaturePreferences) > 0 {
				r.CrtAssignee.FeaturePreferences = make(map[string]types.String)
				for key2, value2 := range resp.CrtAssignee.FeaturePreferences {
					result2, _ := json.Marshal(value2)
					r.CrtAssignee.FeaturePreferences[key2] = types.StringValue(string(result2))
				}
			}
			r.CrtAssignee.ID = types.StringPointerValue(resp.CrtAssignee.ID)
			if resp.CrtAssignee.ImageURI == nil {
				r.CrtAssignee.ImageURI = nil
			} else {
				r.CrtAssignee.ImageURI = &tfTypes.GroupImageURI{}
				if resp.CrtAssignee.ImageURI.AdditionalProperties == nil {
					r.CrtAssignee.ImageURI.AdditionalProperties = types.StringNull()
				} else {
					additionalPropertiesResult, _ := json.Marshal(resp.CrtAssignee.ImageURI.AdditionalProperties)
					r.CrtAssignee.ImageURI.AdditionalProperties = types.StringValue(string(additionalPropertiesResult))
				}
				r.CrtAssignee.ImageURI.Original = types.StringPointerValue(resp.CrtAssignee.ImageURI.Original)
				r.CrtAssignee.ImageURI.Thumbnail32 = types.StringPointerValue(resp.CrtAssignee.ImageURI.Thumbnail32)
			}
			r.CrtAssignee.IsSignatureEnabled = types.BoolPointerValue(resp.CrtAssignee.IsSignatureEnabled)
			r.CrtAssignee.MfaEnabled = types.BoolPointerValue(resp.CrtAssignee.MfaEnabled)
			r.CrtAssignee.OrganizationID = types.StringPointerValue(resp.CrtAssignee.OrganizationID)
			if resp.CrtAssignee.OverrideReleaseChannel != nil {
				r.CrtAssignee.OverrideReleaseChannel = types.StringValue(string(*resp.CrtAssignee.OverrideReleaseChannel))
			} else {
				r.CrtAssignee.OverrideReleaseChannel = types.StringNull()
			}
			r.CrtAssignee.Phone = types.StringPointerValue(resp.CrtAssignee.Phone)
			r.CrtAssignee.PhoneVerified = types.BoolPointerValue(resp.CrtAssignee.PhoneVerified)
			r.CrtAssignee.PreferredLanguage = types.StringPointerValue(resp.CrtAssignee.PreferredLanguage)
			r.CrtAssignee.Properties = []tfTypes.GroupProperties{}
			if len(r.CrtAssignee.Properties) > len(resp.CrtAssignee.Properties) {
				r.CrtAssignee.Properties = r.CrtAssignee.Properties[:len(resp.CrtAssignee.Properties)]
			}
			for propertiesCount, propertiesItem := range resp.CrtAssignee.Properties {
				var properties1 tfTypes.GroupProperties
				properties1.Name = types.StringValue(propertiesItem.Name)
				properties1.Value = types.StringValue(propertiesItem.Value)
				if propertiesCount+1 > len(r.CrtAssignee.Properties) {
					r.CrtAssignee.Properties = append(r.CrtAssignee.Properties, properties1)
				} else {
					r.CrtAssignee.Properties[propertiesCount].Name = properties1.Name
					r.CrtAssignee.Properties[propertiesCount].Value = properties1.Value
				}
			}
			r.CrtAssignee.SecondaryPhone = types.StringPointerValue(resp.CrtAssignee.SecondaryPhone)
			r.CrtAssignee.Signature = types.StringPointerValue(resp.CrtAssignee.Signature)
			if resp.CrtAssignee.Status != nil {
				r.CrtAssignee.Status = types.StringValue(string(*resp.CrtAssignee.Status))
			} else {
				r.CrtAssignee.Status = types.StringNull()
			}
			r.CrtAssignee.Token = types.StringPointerValue(resp.CrtAssignee.Token)
		}
		r.ID = types.StringValue(resp.ID)
		r.Name = types.StringValue(resp.Name)
		r.OrgID = types.StringValue(resp.OrgID)
		r.UpdatedAt = types.StringValue(resp.UpdatedAt)
		r.Users = []tfTypes.UserV2{}
		if len(r.Users) > len(resp.Users) {
			r.Users = r.Users[:len(resp.Users)]
		}
		for usersCount, usersItem := range resp.Users {
			var users1 tfTypes.UserV2
			if usersItem.ActivatedAt != nil {
				users1.ActivatedAt = types.StringValue(usersItem.ActivatedAt.Format(time.RFC3339Nano))
			} else {
				users1.ActivatedAt = types.StringNull()
			}
			if usersItem.CreatedAt != nil {
				users1.CreatedAt = types.StringValue(usersItem.CreatedAt.Format(time.RFC3339Nano))
			} else {
				users1.CreatedAt = types.StringNull()
			}
			users1.CustomStartPage = types.StringPointerValue(usersItem.CustomStartPage)
			users1.Department = types.StringPointerValue(usersItem.Department)
			users1.DisplayName = types.StringPointerValue(usersItem.DisplayName)
			users1.DraftEmail = types.StringPointerValue(usersItem.DraftEmail)
			users1.Email = types.StringPointerValue(usersItem.Email)
			if len(usersItem.EmailNotificationSetting) > 0 {
				users1.EmailNotificationSetting = make(map[string]types.String)
				for key3, value4 := range usersItem.EmailNotificationSetting {
					result3, _ := json.Marshal(value4)
					users1.EmailNotificationSetting[key3] = types.StringValue(string(result3))
				}
			}
			if len(usersItem.Favorites) > 0 {
				users1.Favorites = make(map[string]types.String)
				for key4, value5 := range usersItem.Favorites {
					result4, _ := json.Marshal(value5)
					users1.Favorites[key4] = types.StringValue(string(result4))
				}
			}
			if len(usersItem.FeaturePreferences) > 0 {
				users1.FeaturePreferences = make(map[string]types.String)
				for key5, value6 := range usersItem.FeaturePreferences {
					result5, _ := json.Marshal(value6)
					users1.FeaturePreferences[key5] = types.StringValue(string(result5))
				}
			}
			users1.ID = types.StringPointerValue(usersItem.ID)
			if usersItem.ImageURI == nil {
				users1.ImageURI = nil
			} else {
				users1.ImageURI = &tfTypes.GroupImageURI{}
				if usersItem.ImageURI.AdditionalProperties == nil {
					users1.ImageURI.AdditionalProperties = types.StringNull()
				} else {
					additionalPropertiesResult1, _ := json.Marshal(usersItem.ImageURI.AdditionalProperties)
					users1.ImageURI.AdditionalProperties = types.StringValue(string(additionalPropertiesResult1))
				}
				users1.ImageURI.Original = types.StringPointerValue(usersItem.ImageURI.Original)
				users1.ImageURI.Thumbnail32 = types.StringPointerValue(usersItem.ImageURI.Thumbnail32)
			}
			users1.IsSignatureEnabled = types.BoolPointerValue(usersItem.IsSignatureEnabled)
			users1.MfaEnabled = types.BoolPointerValue(usersItem.MfaEnabled)
			users1.OrganizationID = types.StringPointerValue(usersItem.OrganizationID)
			if usersItem.OverrideReleaseChannel != nil {
				users1.OverrideReleaseChannel = types.StringValue(string(*usersItem.OverrideReleaseChannel))
			} else {
				users1.OverrideReleaseChannel = types.StringNull()
			}
			users1.Phone = types.StringPointerValue(usersItem.Phone)
			users1.PhoneVerified = types.BoolPointerValue(usersItem.PhoneVerified)
			users1.PreferredLanguage = types.StringPointerValue(usersItem.PreferredLanguage)
			users1.Properties = []tfTypes.GroupProperties{}
			for propertiesCount1, propertiesItem1 := range usersItem.Properties {
				var properties3 tfTypes.GroupProperties
				properties3.Name = types.StringValue(propertiesItem1.Name)
				properties3.Value = types.StringValue(propertiesItem1.Value)
				if propertiesCount1+1 > len(users1.Properties) {
					users1.Properties = append(users1.Properties, properties3)
				} else {
					users1.Properties[propertiesCount1].Name = properties3.Name
					users1.Properties[propertiesCount1].Value = properties3.Value
				}
			}
			users1.SecondaryPhone = types.StringPointerValue(usersItem.SecondaryPhone)
			users1.Signature = types.StringPointerValue(usersItem.Signature)
			if usersItem.Status != nil {
				users1.Status = types.StringValue(string(*usersItem.Status))
			} else {
				users1.Status = types.StringNull()
			}
			users1.Token = types.StringPointerValue(usersItem.Token)
			if usersCount+1 > len(r.Users) {
				r.Users = append(r.Users, users1)
			} else {
				r.Users[usersCount].ActivatedAt = users1.ActivatedAt
				r.Users[usersCount].CreatedAt = users1.CreatedAt
				r.Users[usersCount].CustomStartPage = users1.CustomStartPage
				r.Users[usersCount].Department = users1.Department
				r.Users[usersCount].DisplayName = users1.DisplayName
				r.Users[usersCount].DraftEmail = users1.DraftEmail
				r.Users[usersCount].Email = users1.Email
				r.Users[usersCount].EmailNotificationSetting = users1.EmailNotificationSetting
				r.Users[usersCount].Favorites = users1.Favorites
				r.Users[usersCount].FeaturePreferences = users1.FeaturePreferences
				r.Users[usersCount].ID = users1.ID
				r.Users[usersCount].ImageURI = users1.ImageURI
				r.Users[usersCount].IsSignatureEnabled = users1.IsSignatureEnabled
				r.Users[usersCount].MfaEnabled = users1.MfaEnabled
				r.Users[usersCount].OrganizationID = users1.OrganizationID
				r.Users[usersCount].OverrideReleaseChannel = users1.OverrideReleaseChannel
				r.Users[usersCount].Phone = users1.Phone
				r.Users[usersCount].PhoneVerified = users1.PhoneVerified
				r.Users[usersCount].PreferredLanguage = users1.PreferredLanguage
				r.Users[usersCount].Properties = users1.Properties
				r.Users[usersCount].SecondaryPhone = users1.SecondaryPhone
				r.Users[usersCount].Signature = users1.Signature
				r.Users[usersCount].Status = users1.Status
				r.Users[usersCount].Token = users1.Token
			}
		}
	}
}
