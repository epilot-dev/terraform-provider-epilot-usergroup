// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/models/shared"
	"net/http"
)

type GetGroupsRequest struct {
	// Query name to filter by
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Limit the results size
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// Specify the offset
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// Pass it true when you want to hydrate the group with full user details
	Hydrate *bool `queryParam:"style=form,explode=true,name=hydrate"`
}

func (o *GetGroupsRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *GetGroupsRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetGroupsRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetGroupsRequest) GetHydrate() *bool {
	if o == nil {
		return nil
	}
	return o.Hydrate
}

// GetGroupsResponseBody - List of groups
type GetGroupsResponseBody struct {
	Hits   *float64       `json:"hits,omitempty"`
	Groups []shared.Group `json:"groups,omitempty"`
}

func (o *GetGroupsResponseBody) GetHits() *float64 {
	if o == nil {
		return nil
	}
	return o.Hits
}

func (o *GetGroupsResponseBody) GetGroups() []shared.Group {
	if o == nil {
		return nil
	}
	return o.Groups
}

type GetGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List of groups
	Object *GetGroupsResponseBody
}

func (o *GetGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetGroupsResponse) GetObject() *GetGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
