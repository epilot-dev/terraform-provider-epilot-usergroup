// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/internal/utils"
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/models/shared"
	"net/http"
)

// Language for user invitation email
type Language string

const (
	LanguageEn Language = "en"
	LanguageDe Language = "de"
)

func (e Language) ToPointer() *Language {
	return &e
}
func (e *Language) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en":
		fallthrough
	case "de":
		*e = Language(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Language: %v", v)
	}
}

type ResendUserInvitationRequestBody struct {
	// Email address of the address
	Email *string `json:"email,omitempty"`
	// Language for user invitation email
	Language *Language `default:"en" json:"language"`
}

func (r ResendUserInvitationRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ResendUserInvitationRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ResendUserInvitationRequestBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ResendUserInvitationRequestBody) GetLanguage() *Language {
	if o == nil {
		return nil
	}
	return o.Language
}

type ResendUserInvitationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// User Invitation sent successfully.
	UserV2 *shared.UserV2
}

func (o *ResendUserInvitationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ResendUserInvitationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ResendUserInvitationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ResendUserInvitationResponse) GetUserV2() *shared.UserV2 {
	if o == nil {
		return nil
	}
	return o.UserV2
}
