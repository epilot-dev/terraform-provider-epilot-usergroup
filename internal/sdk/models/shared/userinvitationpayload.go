// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/internal/utils"
)

// UserInvitationPayloadLanguage - Language for user invitation email
type UserInvitationPayloadLanguage string

const (
	UserInvitationPayloadLanguageEn UserInvitationPayloadLanguage = "en"
	UserInvitationPayloadLanguageDe UserInvitationPayloadLanguage = "de"
)

func (e UserInvitationPayloadLanguage) ToPointer() *UserInvitationPayloadLanguage {
	return &e
}
func (e *UserInvitationPayloadLanguage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en":
		fallthrough
	case "de":
		*e = UserInvitationPayloadLanguage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserInvitationPayloadLanguage: %v", v)
	}
}

type UserInvitationPayload struct {
	// Email address of the address
	Email *string `json:"email,omitempty"`
	// Language for user invitation email
	Language *UserInvitationPayloadLanguage `default:"en" json:"language"`
	Roles    []string                       `json:"roles,omitempty"`
}

func (u UserInvitationPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UserInvitationPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UserInvitationPayload) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *UserInvitationPayload) GetLanguage() *UserInvitationPayloadLanguage {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *UserInvitationPayload) GetRoles() []string {
	if o == nil {
		return nil
	}
	return o.Roles
}
