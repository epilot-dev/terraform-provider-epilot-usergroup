// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/epilot-dev/terraform-provider-epilot-usergroup/internal/sdk/internal/utils"
)

// Language for user invitation email
type Language string

const (
	LanguageEn Language = "en"
	LanguageDe Language = "de"
)

func (e Language) ToPointer() *Language {
	return &e
}
func (e *Language) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en":
		fallthrough
	case "de":
		*e = Language(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Language: %v", v)
	}
}

type SignupUserPayload struct {
	OrganizationDetail *OrganizationDetail `json:"organization_detail,omitempty"`
	UserDetail         *UserDetail         `json:"user_detail,omitempty"`
	// Language for user invitation email
	Language *Language `default:"en" json:"language"`
}

func (s SignupUserPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SignupUserPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SignupUserPayload) GetOrganizationDetail() *OrganizationDetail {
	if o == nil {
		return nil
	}
	return o.OrganizationDetail
}

func (o *SignupUserPayload) GetUserDetail() *UserDetail {
	if o == nil {
		return nil
	}
	return o.UserDetail
}

func (o *SignupUserPayload) GetLanguage() *Language {
	if o == nil {
		return nil
	}
	return o.Language
}
