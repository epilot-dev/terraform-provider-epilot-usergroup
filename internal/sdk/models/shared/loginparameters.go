// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OauthResponseType string

const (
	OauthResponseTypeCode  OauthResponseType = "code"
	OauthResponseTypeToken OauthResponseType = "token"
)

func (e OauthResponseType) ToPointer() *OauthResponseType {
	return &e
}
func (e *OauthResponseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "code":
		fallthrough
	case "token":
		*e = OauthResponseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OauthResponseType: %v", v)
	}
}

type LoginParameters struct {
	OrganizationID          *string            `json:"organization_id,omitempty"`
	OrganizationName        *string            `json:"organization_name,omitempty"`
	OrganizationType        *string            `json:"organization_type,omitempty"`
	CognitoRegion           *string            `json:"cognito_region,omitempty"`
	CognitoUserPoolID       *string            `json:"cognito_user_pool_id,omitempty"`
	CognitoUserPoolClientID *string            `json:"cognito_user_pool_client_id,omitempty"`
	CognitoOauthDomain      *string            `json:"cognito_oauth_domain,omitempty"`
	CognitoOauthScopes      []string           `json:"cognito_oauth_scopes,omitempty"`
	OauthResponseType       *OauthResponseType `json:"oauth_response_type,omitempty"`
}

func (o *LoginParameters) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *LoginParameters) GetOrganizationName() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationName
}

func (o *LoginParameters) GetOrganizationType() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationType
}

func (o *LoginParameters) GetCognitoRegion() *string {
	if o == nil {
		return nil
	}
	return o.CognitoRegion
}

func (o *LoginParameters) GetCognitoUserPoolID() *string {
	if o == nil {
		return nil
	}
	return o.CognitoUserPoolID
}

func (o *LoginParameters) GetCognitoUserPoolClientID() *string {
	if o == nil {
		return nil
	}
	return o.CognitoUserPoolClientID
}

func (o *LoginParameters) GetCognitoOauthDomain() *string {
	if o == nil {
		return nil
	}
	return o.CognitoOauthDomain
}

func (o *LoginParameters) GetCognitoOauthScopes() []string {
	if o == nil {
		return nil
	}
	return o.CognitoOauthScopes
}

func (o *LoginParameters) GetOauthResponseType() *OauthResponseType {
	if o == nil {
		return nil
	}
	return o.OauthResponseType
}
